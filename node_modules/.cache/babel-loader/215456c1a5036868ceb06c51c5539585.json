{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencehan/Documents/GitHub/clean-chrome/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import { ChromeMessage, Sender } from \"../types\";\n\nimport ToggleButton from './ToggleButton';\nimport toggleData from './toggles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const [censorType, setCensorType] = useState(\"\");\n  console.log(\"Active censor type: \" + censorType);\n  const [responseFromContent, setResponseFromContent] = useState(\"\"); // const sendCensorMessage = (censorMessage) => {\n  //     const message = {\n  //         from: Sender.React,\n  //         message: censorMessage,\n  //     }\n  //     const queryCriteria = {\n  //         active: true,\n  //         currentWindow: true\n  //     }\n  //     chrome.tabs && chrome.tabs.query(queryCriteria, tabs => {\n  //         const currentTabId = tabs[0].id\n  //         chrome.tabs.sendMessage(\n  //             currentTabId,\n  //             message,\n  //             (response) => {\n  //                 setResponseFromContent(response);\n  //             })\n  //     })\n  // }\n\n  /** Updating states active in Main.js */\n\n  function handleChange(event) {\n    setCensorType(prevCensorType => event.target.value === prevCensorType ? \"\" : event.target.value); // sendCensorMessage(censorType)\n    // console.log(\"Response: \" + responseFromContent)\n  }\n  /** Instantiating the toggle elements */\n\n\n  const toggleElements = toggleData.map(toggle => {\n    return /*#__PURE__*/_jsxDEV(ToggleButton, {\n      id: toggle.id,\n      censorType: censorType,\n      handleChange: handleChange\n    }, toggle.keyID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"button-box\",\n    children: toggleElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"eajpljwzqMahiQ6NS+8QRTHWFks=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/clean-chrome/src/components/Main.js"],"names":["React","useState","ToggleButton","toggleData","Main","censorType","setCensorType","console","log","responseFromContent","setResponseFromContent","handleChange","event","prevCensorType","target","value","toggleElements","map","toggle","id","keyID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,WAAvB;;AAGA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBH,UAArC;AAEA,QAAM,CAACI,mBAAD,EAAsBC,sBAAtB,IAAgDT,QAAQ,CAAC,EAAD,CAA9D,CAJ2B,CAO3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;;AACA,WAASU,YAAT,CAAsBC,KAAtB,EAA6B;AACzBN,IAAAA,aAAa,CAACO,cAAc,IACxBD,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuBF,cAAvB,GAAwC,EAAxC,GAA6CD,KAAK,CAACE,MAAN,CAAaC,KADjD,CAAb,CADyB,CAKzB;AACA;AACH;AAED;;;AACA,QAAMC,cAAc,GAAGb,UAAU,CAACc,GAAX,CAAeC,MAAM,IAAI;AAC5C,wBAAO,QAAC,YAAD;AAEH,MAAA,EAAE,EAAEA,MAAM,CAACC,EAFR;AAGH,MAAA,UAAU,EAAEd,UAHT;AAIH,MAAA,YAAY,EAAEM;AAJX,OACEO,MAAM,CAACE,KADT;AAAA;AAAA;AAAA;AAAA,YAAP;AAMH,GAPsB,CAAvB;AASA,sBACI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA,cACKJ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAzDuBZ,I;;KAAAA,I","sourcesContent":["import React, { useState } from 'react'\n// import { ChromeMessage, Sender } from \"../types\";\nimport ToggleButton from './ToggleButton'\nimport toggleData from './toggles'\n\n\nexport default function Main() {\n    const [censorType, setCensorType] = useState(\"\")\n    console.log(\"Active censor type: \" + censorType)\n    \n    const [responseFromContent, setResponseFromContent] = useState(\"\")\n\n\n    // const sendCensorMessage = (censorMessage) => {\n    //     const message = {\n    //         from: Sender.React,\n    //         message: censorMessage,\n    //     }\n    //     const queryCriteria = {\n    //         active: true,\n    //         currentWindow: true\n    //     }\n\n    //     chrome.tabs && chrome.tabs.query(queryCriteria, tabs => {\n    //         const currentTabId = tabs[0].id\n    //         chrome.tabs.sendMessage(\n    //             currentTabId,\n    //             message,\n    //             (response) => {\n    //                 setResponseFromContent(response);\n    //             })\n    //     })\n    // }\n\n    \n    \n    \n    \n    /** Updating states active in Main.js */\n    function handleChange(event) {\n        setCensorType(prevCensorType => (\n            event.target.value === prevCensorType ? \"\" : event.target.value\n        ))\n\n        // sendCensorMessage(censorType)\n        // console.log(\"Response: \" + responseFromContent)\n    }\n\n    /** Instantiating the toggle elements */\n    const toggleElements = toggleData.map(toggle => {\n        return <ToggleButton\n            key={toggle.keyID}\n            id={toggle.id}\n            censorType={censorType}\n            handleChange={handleChange}\n        />\n    })\n\n    return (\n        <form className=\"button-box\">\n            {toggleElements}\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}