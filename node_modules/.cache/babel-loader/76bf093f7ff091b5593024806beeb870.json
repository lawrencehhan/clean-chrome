{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencehan/Documents/GitHub/clean-chrome/src/components/Main.js\",\n    _s = $RefreshSig$();\n\n/*global chrome*/\nimport React, { useState } from 'react';\nimport ToggleButton from './ToggleButton';\nimport toggleData from './toggles';\nimport wordsData from './wiktionaryWords';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const [censorType, setCensorType] = useState(\"\");\n  console.log(\"Active censor type: \" + censorType);\n  const [responseFromContent, setResponseFromContent] = useState(\"\");\n  console.log(\"Response: \" + responseFromContent);\n\n  const sendCensorMessage = censorMessage => {\n    const message = {\n      from: \"React\",\n      message: censorMessage\n    };\n    const queryCriteria = {\n      active: true,\n      currentWindow: true\n    };\n    chrome.tabs && chrome.tabs.query(queryCriteria, tabs => {\n      const currentTabId = tabs[0].id;\n      chrome.tabs.sendMessage(currentTabId, message, response => {\n        setResponseFromContent(response);\n      });\n    });\n  }; // Sending words from here to content.js so the file does not need to be in 'public'\n\n\n  const sendWordsData = data => {\n    const message = {\n      from: \"React\",\n      message: data\n    };\n    const queryCriteria = {\n      active: true,\n      currentWindow: true\n    };\n    chrome.tabs && chrome.tabs.query(queryCriteria, tabs => {\n      const currentTabId = tabs[0].id;\n      chrome.tabs.sendMessage(currentTabId, message, response => {\n        setResponseFromContent(response);\n      });\n    });\n  };\n\n  sendWordsData(wordsData); // Updating states active in Main.js whenever a toggle is clicked\n\n  function handleChange(event) {\n    const newCensorType = event.target.value === censorType ? \"\" : event.target.value; // setCensorType(prevCensorType => (\n    //     event.target.value === prevCensorType ? \"\" : event.target.value\n    // ))\n\n    setCensorType(newCensorType);\n    sendCensorMessage(newCensorType);\n  } // Initializing the toggle elements\n\n\n  const toggleElements = toggleData.map(toggle => {\n    return /*#__PURE__*/_jsxDEV(ToggleButton, {\n      id: toggle.id,\n      censorType: censorType,\n      handleChange: handleChange\n    }, toggle.keyID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"button-box\",\n    children: toggleElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"eajpljwzqMahiQ6NS+8QRTHWFks=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/clean-chrome/src/components/Main.js"],"names":["React","useState","ToggleButton","toggleData","wordsData","Main","censorType","setCensorType","console","log","responseFromContent","setResponseFromContent","sendCensorMessage","censorMessage","message","from","queryCriteria","active","currentWindow","chrome","tabs","query","currentTabId","id","sendMessage","response","sendWordsData","data","handleChange","event","newCensorType","target","value","toggleElements","map","toggle","keyID"],"mappings":"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","sourcesContent":["/*global chrome*/\nimport React, { useState } from 'react'\nimport ToggleButton from './ToggleButton'\nimport toggleData from './toggles'\nimport wordsData from './wiktionaryWords'\n\n\nexport default function Main() {\n    const [censorType, setCensorType] = useState(\"\")\n    console.log(\"Active censor type: \" + censorType)\n    \n    const [responseFromContent, setResponseFromContent] = useState(\"\")\n    console.log(\"Response: \" + responseFromContent)\n\n\n    const sendCensorMessage = (censorMessage) => {\n        const message = {\n            from: \"React\",\n            message: censorMessage,\n        }\n        const queryCriteria = {\n            active: true,\n            currentWindow: true\n        }\n\n        chrome.tabs && chrome.tabs.query(queryCriteria, tabs => {\n            const currentTabId = tabs[0].id\n            chrome.tabs.sendMessage(\n                currentTabId,\n                message,\n                (response) => {\n                    setResponseFromContent(response);\n                })\n        })\n    }\n\n    // Sending words from here to content.js so the file does not need to be in 'public'\n    const sendWordsData = (data) => {\n        const message = {\n            from: \"React\",\n            message: data,\n        }\n        const queryCriteria = {\n            active: true,\n            currentWindow: true\n        }\n\n        chrome.tabs && chrome.tabs.query(queryCriteria, tabs => {\n            const currentTabId = tabs[0].id\n            chrome.tabs.sendMessage(\n                currentTabId,\n                message,\n                (response) => {\n                    setResponseFromContent(response);\n                })\n        })\n    }\n    sendWordsData(wordsData)\n    \n    // Updating states active in Main.js whenever a toggle is clicked\n    function handleChange(event) {\n        const newCensorType = event.target.value === censorType ? \"\" : event.target.value\n        // setCensorType(prevCensorType => (\n        //     event.target.value === prevCensorType ? \"\" : event.target.value\n        // ))\n        setCensorType(newCensorType)\n        sendCensorMessage(newCensorType)\n    }\n\n    // Initializing the toggle elements\n    const toggleElements = toggleData.map(toggle => {\n        return <ToggleButton\n            key={toggle.keyID}\n            id={toggle.id}\n            censorType={censorType}\n            handleChange={handleChange}\n        />\n    })\n\n    return (\n        <form className=\"button-box\">\n            {toggleElements}\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}