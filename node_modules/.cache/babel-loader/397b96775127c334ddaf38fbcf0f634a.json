{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencehan/Documents/GitHub/clean-chrome/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ToggleButton from './ToggleButton';\nimport toggleData from './toggles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const [censorType, setCensorType] = useState(\"\");\n  console.log(\"Active censor type: \" + censorType);\n\n  function handleChange(event) {\n    console.log(\"before:\" + censorType);\n    setCensorType(prevCensorType => event.target.value === prevCensorType ? \"\" : event.target.value);\n    console.log(\"after:\" + censorType);\n  }\n\n  const toggleElements = toggleData.map(toggle => {\n    return /*#__PURE__*/_jsxDEV(ToggleButton, {\n      id: toggle.id,\n      censorType: censorType,\n      handleChange: handleChange\n    }, toggle.keyID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: toggleElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"BkpOTKVWxNodyi4OERI39306C2c=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/clean-chrome/src/components/Main.js"],"names":["React","useState","ToggleButton","toggleData","Main","censorType","setCensorType","console","log","handleChange","event","prevCensorType","target","value","toggleElements","map","toggle","id","keyID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,WAAvB;;AAGA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBH,UAArC;;AAEA,WAASI,YAAT,CAAsBC,KAAtB,EAA6B;AACzBH,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYH,UAAxB;AACAC,IAAAA,aAAa,CAACK,cAAc,IACxBD,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuBF,cAAvB,GAAwC,EAAxC,GAA6CD,KAAK,CAACE,MAAN,CAAaC,KADjD,CAAb;AAGAN,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAUH,UAAtB;AACH;;AAED,QAAMS,cAAc,GAAGX,UAAU,CAACY,GAAX,CAAeC,MAAM,IAAI;AAC5C,wBAAO,QAAC,YAAD;AAEH,MAAA,EAAE,EAAEA,MAAM,CAACC,EAFR;AAGH,MAAA,UAAU,EAAEZ,UAHT;AAIH,MAAA,YAAY,EAAEI;AAJX,OACEO,MAAM,CAACE,KADT;AAAA;AAAA;AAAA;AAAA,YAAP;AAMH,GAPsB,CAAvB;AASA,sBACI;AAAA,cACKJ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA1BuBV,I;;KAAAA,I","sourcesContent":["import React, {useState} from 'react'\nimport ToggleButton from './ToggleButton'\nimport toggleData from './toggles'\n\n\nexport default function Main() {\n    const [censorType, setCensorType] = useState(\"\")\n    console.log(\"Active censor type: \" + censorType)\n    \n    function handleChange(event) {\n        console.log(\"before:\" + censorType)\n        setCensorType(prevCensorType => (\n            event.target.value === prevCensorType ? \"\" : event.target.value\n        ))\n        console.log(\"after:\" +censorType)\n    }\n\n    const toggleElements = toggleData.map(toggle => {\n        return <ToggleButton\n            key={toggle.keyID}\n            id={toggle.id}\n            censorType={censorType}\n            handleChange={handleChange}\n        />\n    })\n\n    return (\n        <div>\n            {toggleElements}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}