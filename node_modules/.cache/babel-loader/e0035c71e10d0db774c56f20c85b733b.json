{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencehan/Documents/GitHub/clean-chrome/src/components/Main.js\",\n    _s = $RefreshSig$();\n\n/*global chrome*/\nimport React, { useState } from 'react'; // import { ChromeMessage, Sender } from \"../types\";\n\nimport ToggleButton from './ToggleButton';\nimport toggleData from './toggles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const [censorType, setCensorType] = useState(\"\");\n  console.log(\"Active censor type: \" + censorType);\n  const [responseFromContent, setResponseFromContent] = useState(\"\"); // console.log(\"Response from content: \" + responseFromContent)\n  // const sendCensorMessage = (censorMessage) => {\n  //     const message = {\n  //         from: Sender.React,\n  //         message: censorMessage,\n  //     }\n  //     const queryCriteria = {\n  //         active: true,\n  //         currentWindow: true\n  //     }\n  //     chrome.tabs && chrome.tabs.query(queryCriteria, tabs => {\n  //         const currentTabId = tabs[0].id\n  //         chrome.tabs.sendMessage(\n  //             currentTabId,\n  //             message,\n  //             (response) => {\n  //                 setResponseFromContent(response);\n  //             })\n  //     })\n  // }\n\n  const sendCensorMessage = censorMessage => {\n    const message = {\n      from: \"React\",\n      message: censorMessage\n    };\n    const queryCriteria = {\n      active: true,\n      currentWindow: true\n    };\n    chrome.tabs && chrome.tabs.query(queryCriteria, tabs => {\n      const currentTabId = tabs[0].id;\n      chrome.tabs.sendMessage(currentTabId, message, response => {\n        setResponseFromContent(response);\n      });\n    });\n  };\n  /** Updating states active in Main.js */\n\n\n  function handleChange(event) {\n    setCensorType(prevCensorType => event.target.value === prevCensorType ? \"\" : event.target.value);\n    sendCensorMessage(censorType);\n  }\n  /** Instantiating the toggle elements */\n\n\n  const toggleElements = toggleData.map(toggle => {\n    return /*#__PURE__*/_jsxDEV(ToggleButton, {\n      id: toggle.id,\n      censorType: censorType,\n      handleChange: handleChange\n    }, toggle.keyID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"button-box\",\n    children: toggleElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"eajpljwzqMahiQ6NS+8QRTHWFks=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/clean-chrome/src/components/Main.js"],"names":["React","useState","ToggleButton","toggleData","Main","censorType","setCensorType","console","log","responseFromContent","setResponseFromContent","sendCensorMessage","censorMessage","message","from","queryCriteria","active","currentWindow","chrome","tabs","query","currentTabId","id","sendMessage","response","handleChange","event","prevCensorType","target","value","toggleElements","map","toggle","keyID"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,WAAvB;;AAGA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBH,UAArC;AAEA,QAAM,CAACI,mBAAD,EAAsBC,sBAAtB,IAAgDT,QAAQ,CAAC,EAAD,CAA9D,CAJ2B,CAK3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMU,iBAAiB,GAAIC,aAAD,IAAmB;AACzC,UAAMC,OAAO,GAAG;AACZC,MAAAA,IAAI,EAAE,OADM;AAEZD,MAAAA,OAAO,EAAED;AAFG,KAAhB;AAIA,UAAMG,aAAa,GAAG;AAClBC,MAAAA,MAAM,EAAE,IADU;AAElBC,MAAAA,aAAa,EAAE;AAFG,KAAtB;AAKAC,IAAAA,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBL,aAAlB,EAAiCI,IAAI,IAAI;AACpD,YAAME,YAAY,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQG,EAA7B;AACAJ,MAAAA,MAAM,CAACC,IAAP,CAAYI,WAAZ,CACIF,YADJ,EAEIR,OAFJ,EAGKW,QAAD,IAAc;AACVd,QAAAA,sBAAsB,CAACc,QAAD,CAAtB;AACH,OALL;AAMH,KARc,CAAf;AASH,GAnBD;AAyBA;;;AACA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzBpB,IAAAA,aAAa,CAACqB,cAAc,IACxBD,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuBF,cAAvB,GAAwC,EAAxC,GAA6CD,KAAK,CAACE,MAAN,CAAaC,KADjD,CAAb;AAIAlB,IAAAA,iBAAiB,CAACN,UAAD,CAAjB;AACH;AAED;;;AACA,QAAMyB,cAAc,GAAG3B,UAAU,CAAC4B,GAAX,CAAeC,MAAM,IAAI;AAC5C,wBAAO,QAAC,YAAD;AAEH,MAAA,EAAE,EAAEA,MAAM,CAACV,EAFR;AAGH,MAAA,UAAU,EAAEjB,UAHT;AAIH,MAAA,YAAY,EAAEoB;AAJX,OACEO,MAAM,CAACC,KADT;AAAA;AAAA;AAAA;AAAA,YAAP;AAMH,GAPsB,CAAvB;AASA,sBACI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA5EuB1B,I;;KAAAA,I","sourcesContent":["/*global chrome*/\nimport React, { useState } from 'react'\n// import { ChromeMessage, Sender } from \"../types\";\nimport ToggleButton from './ToggleButton'\nimport toggleData from './toggles'\n\n\nexport default function Main() {\n    const [censorType, setCensorType] = useState(\"\")\n    console.log(\"Active censor type: \" + censorType)\n    \n    const [responseFromContent, setResponseFromContent] = useState(\"\")\n    // console.log(\"Response from content: \" + responseFromContent)\n\n    // const sendCensorMessage = (censorMessage) => {\n    //     const message = {\n    //         from: Sender.React,\n    //         message: censorMessage,\n    //     }\n    //     const queryCriteria = {\n    //         active: true,\n    //         currentWindow: true\n    //     }\n\n    //     chrome.tabs && chrome.tabs.query(queryCriteria, tabs => {\n    //         const currentTabId = tabs[0].id\n    //         chrome.tabs.sendMessage(\n    //             currentTabId,\n    //             message,\n    //             (response) => {\n    //                 setResponseFromContent(response);\n    //             })\n    //     })\n    // }\n    const sendCensorMessage = (censorMessage) => {\n        const message = {\n            from: \"React\",\n            message: censorMessage,\n        }\n        const queryCriteria = {\n            active: true,\n            currentWindow: true\n        }\n\n        chrome.tabs && chrome.tabs.query(queryCriteria, tabs => {\n            const currentTabId = tabs[0].id\n            chrome.tabs.sendMessage(\n                currentTabId,\n                message,\n                (response) => {\n                    setResponseFromContent(response);\n                })\n        })\n    }\n\n    \n    \n    \n    \n    /** Updating states active in Main.js */\n    function handleChange(event) {\n        setCensorType(prevCensorType => (\n            event.target.value === prevCensorType ? \"\" : event.target.value\n        ))\n\n        sendCensorMessage(censorType)\n    }\n\n    /** Instantiating the toggle elements */\n    const toggleElements = toggleData.map(toggle => {\n        return <ToggleButton\n            key={toggle.keyID}\n            id={toggle.id}\n            censorType={censorType}\n            handleChange={handleChange}\n        />\n    })\n\n    return (\n        <form className=\"button-box\">\n            {toggleElements}\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}