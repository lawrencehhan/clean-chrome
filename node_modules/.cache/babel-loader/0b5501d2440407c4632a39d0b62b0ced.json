{"ast":null,"code":"import{ChromeMessage,Sender}from\"./types\";var messagesFromReactAppListener=function messagesFromReactAppListener(message,sender,response){console.log('[content.js]. Message received',{message:message,sender:sender});if(sender.id===chrome.runtime.id&&message.from===Sender.React&&message.message===\"\"){response(\"No censor is being applied.\");}if(sender.id===chrome.runtime.id&&message.from===Sender.React&&message.message===\"Black-Box\"){// code block here on blacking out DOM words\nresponse(\"Black-Box censor has been applied.\");}if(sender.id===chrome.runtime.id&&message.from===Sender.React&&message.message===\"Stars\"){// code block here on blacking out DOM words\nresponse(\"Stars censor has been applied.\");}if(sender.id===chrome.runtime.id&&message.from===Sender.React&&message.message===\"Transparent\"){// code block here on blacking out DOM words\nresponse(\"Transparent censor has been applied.\");}if(sender.id===chrome.runtime.id&&message.from===Sender.React&&message.message===\"Strike\"){// code block here on blacking out DOM words\nresponse(\"Strike censor has been applied.\");}// if (\n//     sender.id === chrome.runtime.id &&\n//     message.from === Sender.React &&\n//     message.message === \"delete logo\") {\n//     const logo = document.getElementById('hplogo');\n//     logo.parentElement.removeChild(logo)\n// }\n};// Fires when either the React Main.js or content.js sends a message\nchrome.runtime.onMessage.addListener(messagesFromReactAppListener);","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/clean-chrome/src/content.js"],"names":["ChromeMessage","Sender","messagesFromReactAppListener","message","sender","response","console","log","id","chrome","runtime","from","React","onMessage","addListener"],"mappings":"AAAA,OAASA,aAAT,CAAwBC,MAAxB,KAAsC,SAAtC,CAEA,GAAMC,CAAAA,4BAA4B,CAAG,QAA/BA,CAAAA,4BAA+B,CAACC,OAAD,CAAUC,MAAV,CAAkBC,QAAlB,CAA+B,CAChEC,OAAO,CAACC,GAAR,CAAY,gCAAZ,CAA8C,CAACJ,OAAO,CAAPA,OAAD,CAAUC,MAAM,CAANA,MAAV,CAA9C,EAEA,GACIA,MAAM,CAACI,EAAP,GAAcC,MAAM,CAACC,OAAP,CAAeF,EAA7B,EACAL,OAAO,CAACQ,IAAR,GAAiBV,MAAM,CAACW,KADxB,EAEAT,OAAO,CAACA,OAAR,GAAoB,EAHxB,CAG4B,CACpBE,QAAQ,CAAC,6BAAD,CAAR,CACH,CAEL,GACID,MAAM,CAACI,EAAP,GAAcC,MAAM,CAACC,OAAP,CAAeF,EAA7B,EACAL,OAAO,CAACQ,IAAR,GAAiBV,MAAM,CAACW,KADxB,EAEAT,OAAO,CAACA,OAAR,GAAoB,WAHxB,CAGqC,CAC7B;AACAE,QAAQ,CAAC,oCAAD,CAAR,CACH,CAEL,GACID,MAAM,CAACI,EAAP,GAAcC,MAAM,CAACC,OAAP,CAAeF,EAA7B,EACAL,OAAO,CAACQ,IAAR,GAAiBV,MAAM,CAACW,KADxB,EAEAT,OAAO,CAACA,OAAR,GAAoB,OAHxB,CAGiC,CACzB;AACAE,QAAQ,CAAC,gCAAD,CAAR,CACH,CAEL,GACID,MAAM,CAACI,EAAP,GAAcC,MAAM,CAACC,OAAP,CAAeF,EAA7B,EACAL,OAAO,CAACQ,IAAR,GAAiBV,MAAM,CAACW,KADxB,EAEAT,OAAO,CAACA,OAAR,GAAoB,aAHxB,CAGuC,CAC/B;AACAE,QAAQ,CAAC,sCAAD,CAAR,CACH,CAEL,GACID,MAAM,CAACI,EAAP,GAAcC,MAAM,CAACC,OAAP,CAAeF,EAA7B,EACAL,OAAO,CAACQ,IAAR,GAAiBV,MAAM,CAACW,KADxB,EAEAT,OAAO,CAACA,OAAR,GAAoB,QAHxB,CAGkC,CAC1B;AACAE,QAAQ,CAAC,iCAAD,CAAR,CACH,CAEL;AACA;AACA;AACA;AAEA;AACA;AACA;AACH,CAlDD,CAoDA;AACAI,MAAM,CAACC,OAAP,CAAeG,SAAf,CAAyBC,WAAzB,CAAqCZ,4BAArC","sourcesContent":["import { ChromeMessage, Sender } from \"./types\";\n\nconst messagesFromReactAppListener = (message, sender, response) => {\n    console.log('[content.js]. Message received', {message, sender,})\n\n    if (\n        sender.id === chrome.runtime.id &&\n        message.from === Sender.React &&\n        message.message === \"\") {\n            response(\"No censor is being applied.\");\n        }\n\n    if (\n        sender.id === chrome.runtime.id &&\n        message.from === Sender.React &&\n        message.message === \"Black-Box\") {\n            // code block here on blacking out DOM words\n            response(\"Black-Box censor has been applied.\");\n        }\n\n    if (\n        sender.id === chrome.runtime.id &&\n        message.from === Sender.React &&\n        message.message === \"Stars\") {\n            // code block here on blacking out DOM words\n            response(\"Stars censor has been applied.\");\n        }\n\n    if (\n        sender.id === chrome.runtime.id &&\n        message.from === Sender.React &&\n        message.message === \"Transparent\") {\n            // code block here on blacking out DOM words\n            response(\"Transparent censor has been applied.\");\n        }\n    \n    if (\n        sender.id === chrome.runtime.id &&\n        message.from === Sender.React &&\n        message.message === \"Strike\") {\n            // code block here on blacking out DOM words\n            response(\"Strike censor has been applied.\");\n        }\n\n    // if (\n    //     sender.id === chrome.runtime.id &&\n    //     message.from === Sender.React &&\n    //     message.message === \"delete logo\") {\n\n    //     const logo = document.getElementById('hplogo');\n    //     logo.parentElement.removeChild(logo)\n    // }\n}\n\n// Fires when either the React Main.js or content.js sends a message\nchrome.runtime.onMessage.addListener(messagesFromReactAppListener);\n"]},"metadata":{},"sourceType":"module"}