{"ast":null,"code":"import _slicedToArray from\"/Users/lawrencehan/Documents/GitHub/clean-chrome/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/*global chrome*/import React,{useState}from'react';// import { ChromeMessage, Sender } from \"../types\";\nimport ToggleButton from'./ToggleButton';import toggleData from'./toggles';import{jsx as _jsx}from\"react/jsx-runtime\";export default function Main(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),censorType=_useState2[0],setCensorType=_useState2[1];console.log(\"Active censor type: \"+censorType);var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),responseFromContent=_useState4[0],setResponseFromContent=_useState4[1];console.log(\"Response: \"+responseFromContent);// const sendCensorMessage = (censorMessage) => {\n//     const message = {\n//         from: Sender.React,\n//         message: censorMessage,\n//     }\n//     const queryCriteria = {\n//         active: true,\n//         currentWindow: true\n//     }\n//     chrome.tabs && chrome.tabs.query(queryCriteria, tabs => {\n//         const currentTabId = tabs[0].id\n//         chrome.tabs.sendMessage(\n//             currentTabId,\n//             message,\n//             (response) => {\n//                 setResponseFromContent(response);\n//             })\n//     })\n// }\nvar sendCensorMessage=function sendCensorMessage(censorMessage){var message={from:\"React\",message:censorMessage};var queryCriteria={active:true,currentWindow:true};chrome.tabs&&chrome.tabs.query(queryCriteria,function(tabs){var currentTabId=tabs[0].id;console.log(currentTabId);chrome.tabs.sendMessage(currentTabId,message,function(response){setResponseFromContent(response);});});console.log(\"Got to end of sendCensorMessage\");};/** Updating states active in Main.js */function handleChange(event){setCensorType(function(prevCensorType){return event.target.value===prevCensorType?\"\":event.target.value;});sendCensorMessage(censorType);}/** Instantiating the toggle elements */var toggleElements=toggleData.map(function(toggle){return/*#__PURE__*/_jsx(ToggleButton,{id:toggle.id,censorType:censorType,handleChange:handleChange},toggle.keyID);});return/*#__PURE__*/_jsx(\"form\",{className:\"button-box\",children:toggleElements});}","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/clean-chrome/src/components/Main.js"],"names":["React","useState","ToggleButton","toggleData","Main","censorType","setCensorType","console","log","responseFromContent","setResponseFromContent","sendCensorMessage","censorMessage","message","from","queryCriteria","active","currentWindow","chrome","tabs","query","currentTabId","id","sendMessage","response","handleChange","event","prevCensorType","target","value","toggleElements","map","toggle","keyID"],"mappings":"sIAAA,iBACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA;AACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,WAAvB,C,2CAGA,cAAe,SAASC,CAAAA,IAAT,EAAgB,CAC3B,cAAoCH,QAAQ,CAAC,EAAD,CAA5C,wCAAOI,UAAP,eAAmBC,aAAnB,eACAC,OAAO,CAACC,GAAR,CAAY,uBAAyBH,UAArC,EAEA,eAAsDJ,QAAQ,CAAC,EAAD,CAA9D,yCAAOQ,mBAAP,eAA4BC,sBAA5B,eACAH,OAAO,CAACC,GAAR,CAAY,aAAeC,mBAA3B,EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,aAAD,CAAmB,CACzC,GAAMC,CAAAA,OAAO,CAAG,CACZC,IAAI,CAAE,OADM,CAEZD,OAAO,CAAED,aAFG,CAAhB,CAIA,GAAMG,CAAAA,aAAa,CAAG,CAClBC,MAAM,CAAE,IADU,CAElBC,aAAa,CAAE,IAFG,CAAtB,CAKAC,MAAM,CAACC,IAAP,EAAeD,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBL,aAAlB,CAAiC,SAAAI,IAAI,CAAI,CACpD,GAAME,CAAAA,YAAY,CAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQG,EAA7B,CACAf,OAAO,CAACC,GAAR,CAAYa,YAAZ,EACAH,MAAM,CAACC,IAAP,CAAYI,WAAZ,CACIF,YADJ,CAEIR,OAFJ,CAGI,SAACW,QAAD,CAAc,CACVd,sBAAsB,CAACc,QAAD,CAAtB,CACH,CALL,EAMH,CATc,CAAf,CAUAjB,OAAO,CAACC,GAAR,CAAY,iCAAZ,EACH,CArBD,CA2BA,wCACA,QAASiB,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CACzBpB,aAAa,CAAC,SAAAqB,cAAc,QACxBD,CAAAA,KAAK,CAACE,MAAN,CAAaC,KAAb,GAAuBF,cAAvB,CAAwC,EAAxC,CAA6CD,KAAK,CAACE,MAAN,CAAaC,KADlC,EAAf,CAAb,CAIAlB,iBAAiB,CAACN,UAAD,CAAjB,CACH,CAED,wCACA,GAAMyB,CAAAA,cAAc,CAAG3B,UAAU,CAAC4B,GAAX,CAAe,SAAAC,MAAM,CAAI,CAC5C,mBAAO,KAAC,YAAD,EAEH,EAAE,CAAEA,MAAM,CAACV,EAFR,CAGH,UAAU,CAAEjB,UAHT,CAIH,YAAY,CAAEoB,YAJX,EACEO,MAAM,CAACC,KADT,CAAP,CAMH,CAPsB,CAAvB,CASA,mBACI,aAAM,SAAS,CAAC,YAAhB,UACKH,cADL,EADJ,CAKH","sourcesContent":["/*global chrome*/\nimport React, { useState } from 'react'\n// import { ChromeMessage, Sender } from \"../types\";\nimport ToggleButton from './ToggleButton'\nimport toggleData from './toggles'\n\n\nexport default function Main() {\n    const [censorType, setCensorType] = useState(\"\")\n    console.log(\"Active censor type: \" + censorType)\n    \n    const [responseFromContent, setResponseFromContent] = useState(\"\")\n    console.log(\"Response: \" + responseFromContent)\n\n    // const sendCensorMessage = (censorMessage) => {\n    //     const message = {\n    //         from: Sender.React,\n    //         message: censorMessage,\n    //     }\n    //     const queryCriteria = {\n    //         active: true,\n    //         currentWindow: true\n    //     }\n\n    //     chrome.tabs && chrome.tabs.query(queryCriteria, tabs => {\n    //         const currentTabId = tabs[0].id\n    //         chrome.tabs.sendMessage(\n    //             currentTabId,\n    //             message,\n    //             (response) => {\n    //                 setResponseFromContent(response);\n    //             })\n    //     })\n    // }\n    const sendCensorMessage = (censorMessage) => {\n        const message = {\n            from: \"React\",\n            message: censorMessage,\n        }\n        const queryCriteria = {\n            active: true,\n            currentWindow: true\n        }\n\n        chrome.tabs && chrome.tabs.query(queryCriteria, tabs => {\n            const currentTabId = tabs[0].id\n            console.log(currentTabId)\n            chrome.tabs.sendMessage(\n                currentTabId,\n                message,\n                (response) => {\n                    setResponseFromContent(response);\n                })\n        })\n        console.log(\"Got to end of sendCensorMessage\")\n    }\n\n    \n    \n    \n    \n    /** Updating states active in Main.js */\n    function handleChange(event) {\n        setCensorType(prevCensorType => (\n            event.target.value === prevCensorType ? \"\" : event.target.value\n        ))\n\n        sendCensorMessage(censorType)\n    }\n\n    /** Instantiating the toggle elements */\n    const toggleElements = toggleData.map(toggle => {\n        return <ToggleButton\n            key={toggle.keyID}\n            id={toggle.id}\n            censorType={censorType}\n            handleChange={handleChange}\n        />\n    })\n\n    return (\n        <form className=\"button-box\">\n            {toggleElements}\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}